{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\flow wave\\\\src\\\\contexts\\\\CurrencyContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CurrencyContext = /*#__PURE__*/createContext();\nexport const useCurrency = () => {\n  _s();\n  const context = useContext(CurrencyContext);\n  if (!context) {\n    throw new Error('useCurrency must be used within a CurrencyProvider');\n  }\n  return context;\n};\n_s(useCurrency, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const CurrencyProvider = ({\n  children\n}) => {\n  _s2();\n  const [fromCurrency, setFromCurrency] = useState({\n    code: 'NGN',\n    flag: 'https://flagcdn.com/21x21/ng.png',\n    name: 'Nigeria'\n  });\n  const [toCurrency, setToCurrency] = useState({\n    code: 'USD',\n    flag: 'https://flagcdn.com/21x21/us.png',\n    name: 'United States'\n  });\n  const [sendAmount, setSendAmount] = useState('');\n  const [receiveAmount, setReceiveAmount] = useState('');\n  const updateFromCurrency = currency => {\n    setFromCurrency(currency);\n  };\n  const updateToCurrency = currency => {\n    setToCurrency(currency);\n  };\n  const updateSendAmount = amount => {\n    setSendAmount(amount);\n    // Simple conversion calculation (1500 NGN = 1 USD)\n    if (amount && !isNaN(amount) && parseFloat(amount) > 0) {\n      const rate = fromCurrency.code === 'NGN' ? 1500 : 1;\n      const converted = (parseFloat(amount) / rate).toFixed(2);\n      setReceiveAmount(converted);\n    } else {\n      setReceiveAmount('');\n    }\n  };\n  const value = {\n    fromCurrency,\n    toCurrency,\n    sendAmount,\n    receiveAmount,\n    updateFromCurrency,\n    updateToCurrency,\n    updateSendAmount\n  };\n  return /*#__PURE__*/_jsxDEV(CurrencyContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s2(CurrencyProvider, \"IElTJyKLDY2Pc2U/dmDZ+XQUYuo=\");\n_c = CurrencyProvider;\nvar _c;\n$RefreshReg$(_c, \"CurrencyProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","CurrencyContext","useCurrency","_s","context","Error","CurrencyProvider","children","_s2","fromCurrency","setFromCurrency","code","flag","name","toCurrency","setToCurrency","sendAmount","setSendAmount","receiveAmount","setReceiveAmount","updateFromCurrency","currency","updateToCurrency","updateSendAmount","amount","isNaN","parseFloat","rate","converted","toFixed","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/Documents/flow wave/src/contexts/CurrencyContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\n\r\nconst CurrencyContext = createContext();\r\n\r\nexport const useCurrency = () => {\r\n  const context = useContext(CurrencyContext);\r\n  if (!context) {\r\n    throw new Error('useCurrency must be used within a CurrencyProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const CurrencyProvider = ({ children }) => {\r\n  const [fromCurrency, setFromCurrency] = useState({ \r\n    code: 'NGN', \r\n    flag: 'https://flagcdn.com/21x21/ng.png', \r\n    name: 'Nigeria' \r\n  });\r\n  \r\n  const [toCurrency, setToCurrency] = useState({ \r\n    code: 'USD', \r\n    flag: 'https://flagcdn.com/21x21/us.png', \r\n    name: 'United States' \r\n  });\r\n\r\n  const [sendAmount, setSendAmount] = useState('');\r\n  const [receiveAmount, setReceiveAmount] = useState('');\r\n\r\n  const updateFromCurrency = (currency) => {\r\n    setFromCurrency(currency);\r\n  };\r\n\r\n  const updateToCurrency = (currency) => {\r\n    setToCurrency(currency);\r\n  };\r\n\r\n  const updateSendAmount = (amount) => {\r\n    setSendAmount(amount);\r\n    // Simple conversion calculation (1500 NGN = 1 USD)\r\n    if (amount && !isNaN(amount) && parseFloat(amount) > 0) {\r\n      const rate = fromCurrency.code === 'NGN' ? 1500 : 1;\r\n      const converted = (parseFloat(amount) / rate).toFixed(2);\r\n      setReceiveAmount(converted);\r\n    } else {\r\n      setReceiveAmount('');\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    fromCurrency,\r\n    toCurrency,\r\n    sendAmount,\r\n    receiveAmount,\r\n    updateFromCurrency,\r\n    updateToCurrency,\r\n    updateSendAmount,\r\n  };\r\n\r\n  return (\r\n    <CurrencyContext.Provider value={value}>\r\n      {children}\r\n    </CurrencyContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,eAAe,gBAAGL,aAAa,CAAC,CAAC;AAEvC,OAAO,MAAMM,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAMC,OAAO,GAAGP,UAAU,CAACI,eAAe,CAAC;EAC3C,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,oDAAoD,CAAC;EACvE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,WAAW;AAQxB,OAAO,MAAMI,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAChD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC;IAC/Ca,IAAI,EAAE,KAAK;IACXC,IAAI,EAAE,kCAAkC;IACxCC,IAAI,EAAE;EACR,CAAC,CAAC;EAEF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC;IAC3Ca,IAAI,EAAE,KAAK;IACXC,IAAI,EAAE,kCAAkC;IACxCC,IAAI,EAAE;EACR,CAAC,CAAC;EAEF,MAAM,CAACG,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACoB,aAAa,EAAEC,gBAAgB,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMsB,kBAAkB,GAAIC,QAAQ,IAAK;IACvCX,eAAe,CAACW,QAAQ,CAAC;EAC3B,CAAC;EAED,MAAMC,gBAAgB,GAAID,QAAQ,IAAK;IACrCN,aAAa,CAACM,QAAQ,CAAC;EACzB,CAAC;EAED,MAAME,gBAAgB,GAAIC,MAAM,IAAK;IACnCP,aAAa,CAACO,MAAM,CAAC;IACrB;IACA,IAAIA,MAAM,IAAI,CAACC,KAAK,CAACD,MAAM,CAAC,IAAIE,UAAU,CAACF,MAAM,CAAC,GAAG,CAAC,EAAE;MACtD,MAAMG,IAAI,GAAGlB,YAAY,CAACE,IAAI,KAAK,KAAK,GAAG,IAAI,GAAG,CAAC;MACnD,MAAMiB,SAAS,GAAG,CAACF,UAAU,CAACF,MAAM,CAAC,GAAGG,IAAI,EAAEE,OAAO,CAAC,CAAC,CAAC;MACxDV,gBAAgB,CAACS,SAAS,CAAC;IAC7B,CAAC,MAAM;MACLT,gBAAgB,CAAC,EAAE,CAAC;IACtB;EACF,CAAC;EAED,MAAMW,KAAK,GAAG;IACZrB,YAAY;IACZK,UAAU;IACVE,UAAU;IACVE,aAAa;IACbE,kBAAkB;IAClBE,gBAAgB;IAChBC;EACF,CAAC;EAED,oBACEvB,OAAA,CAACC,eAAe,CAAC8B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAvB,QAAA,EACpCA;EAAQ;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;AAAC3B,GAAA,CAnDWF,gBAAgB;AAAA8B,EAAA,GAAhB9B,gBAAgB;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}