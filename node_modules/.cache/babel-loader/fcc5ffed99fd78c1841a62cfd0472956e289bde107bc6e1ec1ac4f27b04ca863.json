{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\flow wave\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check if user is already logged in (from localStorage)\n    const token = localStorage.getItem('authToken');\n    const userData = localStorage.getItem('userData');\n    if (token && userData) {\n      setIsAuthenticated(true);\n      setUser(JSON.parse(userData));\n    }\n    setLoading(false);\n  }, []);\n  const login = async (email, password) => {\n    try {\n      // Simulate API call\n      const userData = {\n        id: 1,\n        email: email,\n        name: 'User Name',\n        joinedAt: new Date().toISOString()\n      };\n\n      // Store auth data\n      localStorage.setItem('authToken', 'mock-jwt-token');\n      localStorage.setItem('userData', JSON.stringify(userData));\n      setIsAuthenticated(true);\n      setUser(userData);\n      return {\n        success: true\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: 'Login failed'\n      };\n    }\n  };\n  const signup = async userData => {\n    try {\n      // Simulate API call for signup\n      const newUser = {\n        id: Date.now(),\n        email: userData.email,\n        name: userData.fullName || 'User Name',\n        joinedAt: new Date().toISOString()\n      };\n\n      // Store auth data\n      localStorage.setItem('authToken', 'mock-jwt-token');\n      localStorage.setItem('userData', JSON.stringify(newUser));\n      setIsAuthenticated(true);\n      setUser(newUser);\n      return {\n        success: true\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: 'Signup failed'\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('userData');\n    setIsAuthenticated(false);\n    setUser(null);\n  };\n  const value = {\n    isAuthenticated,\n    user,\n    login,\n    signup,\n    logout,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"mKb+zX9grAar2iMVStuBBwt7fpw=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","isAuthenticated","setIsAuthenticated","user","setUser","loading","setLoading","token","localStorage","getItem","userData","JSON","parse","login","email","password","id","name","joinedAt","Date","toISOString","setItem","stringify","success","error","signup","newUser","now","fullName","logout","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/Documents/flow wave/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Check if user is already logged in (from localStorage)\r\n    const token = localStorage.getItem('authToken');\r\n    const userData = localStorage.getItem('userData');\r\n    \r\n    if (token && userData) {\r\n      setIsAuthenticated(true);\r\n      setUser(JSON.parse(userData));\r\n    }\r\n    \r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      // Simulate API call\r\n      const userData = {\r\n        id: 1,\r\n        email: email,\r\n        name: 'User Name',\r\n        joinedAt: new Date().toISOString()\r\n      };\r\n      \r\n      // Store auth data\r\n      localStorage.setItem('authToken', 'mock-jwt-token');\r\n      localStorage.setItem('userData', JSON.stringify(userData));\r\n      \r\n      setIsAuthenticated(true);\r\n      setUser(userData);\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      return { success: false, error: 'Login failed' };\r\n    }\r\n  };\r\n\r\n  const signup = async (userData) => {\r\n    try {\r\n      // Simulate API call for signup\r\n      const newUser = {\r\n        id: Date.now(),\r\n        email: userData.email,\r\n        name: userData.fullName || 'User Name',\r\n        joinedAt: new Date().toISOString()\r\n      };\r\n      \r\n      // Store auth data\r\n      localStorage.setItem('authToken', 'mock-jwt-token');\r\n      localStorage.setItem('userData', JSON.stringify(newUser));\r\n      \r\n      setIsAuthenticated(true);\r\n      setUser(newUser);\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      return { success: false, error: 'Signup failed' };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('authToken');\r\n    localStorage.removeItem('userData');\r\n    setIsAuthenticated(false);\r\n    setUser(null);\r\n  };\r\n\r\n  const value = {\r\n    isAuthenticated,\r\n    user,\r\n    login,\r\n    signup,\r\n    logout,\r\n    loading\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}