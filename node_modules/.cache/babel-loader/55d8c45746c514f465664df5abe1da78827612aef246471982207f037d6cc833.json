{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\flow wave\\\\src\\\\contexts\\\\AuthProvider.js\",\n  _s = $RefreshSig$();\n// src/contexts/AuthProvider.js\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check if user is already logged in (from localStorage)\n    const token = localStorage.getItem('authToken');\n    const userData = localStorage.getItem('userData');\n    if (token && userData) {\n      setIsAuthenticated(true);\n      setUser(JSON.parse(userData));\n    }\n    setLoading(false);\n  }, []);\n\n  // --- Core Methods ---\n  const login = async (email, password) => {\n    try {\n      // Simulate API call\n      const userData = {\n        id: 1,\n        email,\n        name: 'User Name',\n        joinedAt: new Date().toISOString()\n      };\n      localStorage.setItem('authToken', 'mock-jwt-token');\n      localStorage.setItem('userData', JSON.stringify(userData));\n      setIsAuthenticated(true);\n      setUser(userData);\n      return {\n        success: true\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: 'Login failed'\n      };\n    }\n  };\n  const signup = async userData => {\n    try {\n      const newUser = {\n        id: Date.now(),\n        email: userData.email,\n        name: userData.fullName || 'User Name',\n        joinedAt: new Date().toISOString()\n      };\n      console.log({\n        newUser\n      });\n      localStorage.setItem('authToken', 'mock-jwt-token');\n      localStorage.setItem('userData', JSON.stringify(newUser));\n      setIsAuthenticated(true);\n      setUser(newUser);\n      return {\n        success: true\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: 'Signup failed'\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('userData');\n    setIsAuthenticated(false);\n    setUser(null);\n  };\n\n  // --- Extended Methods ---\n  const verifyEmail = async code => {\n    try {\n      // Simulate API call to verify email with OTP/code\n      console.log('Verifying email with code:', code);\n      return {\n        success: true\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: 'Email verification failed'\n      };\n    }\n  };\n  const createPassword = async password => {\n    try {\n      console.log('Creating password:', password);\n      return {\n        success: true\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: 'Password creation failed'\n      };\n    }\n  };\n  const forgotPassword = async email => {\n    try {\n      console.log('Sending password reset link to:', email);\n      return {\n        success: true\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: 'Forgot password request failed'\n      };\n    }\n  };\n  const resetPassword = async (token, newPassword) => {\n    try {\n      console.log('Resetting password with token:', token, 'newPassword:', newPassword);\n      return {\n        success: true\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: 'Password reset failed'\n      };\n    }\n  };\n  const createPin = async pin => {\n    try {\n      console.log('Creating user PIN:', pin);\n      return {\n        success: true\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: 'PIN creation failed'\n      };\n    }\n  };\n  const value = {\n    isAuthenticated,\n    user,\n    login,\n    signup,\n    logout,\n    verifyEmail,\n    createPassword,\n    forgotPassword,\n    resetPassword,\n    createPin,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 10\n  }, this);\n};\n_s(AuthProvider, \"mKb+zX9grAar2iMVStuBBwt7fpw=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","user","setUser","loading","setLoading","token","localStorage","getItem","userData","JSON","parse","login","email","password","id","name","joinedAt","Date","toISOString","setItem","stringify","success","error","signup","newUser","now","fullName","console","log","logout","removeItem","verifyEmail","code","createPassword","forgotPassword","resetPassword","newPassword","createPin","pin","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/Documents/flow wave/src/contexts/AuthProvider.js"],"sourcesContent":["// src/contexts/AuthProvider.js\r\nimport React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Check if user is already logged in (from localStorage)\r\n    const token = localStorage.getItem('authToken');\r\n    const userData = localStorage.getItem('userData');\r\n    \r\n    if (token && userData) {\r\n      setIsAuthenticated(true);\r\n      setUser(JSON.parse(userData));\r\n    }\r\n    \r\n    setLoading(false);\r\n  }, []);\r\n\r\n  // --- Core Methods ---\r\n  const login = async (email, password) => {\r\n    try {\r\n      // Simulate API call\r\n      const userData = {\r\n        id: 1,\r\n        email,\r\n        name: 'User Name',\r\n        joinedAt: new Date().toISOString(),\r\n      };\r\n\r\n      localStorage.setItem('authToken', 'mock-jwt-token');\r\n      localStorage.setItem('userData', JSON.stringify(userData));\r\n\r\n      setIsAuthenticated(true);\r\n      setUser(userData);\r\n\r\n      return { success: true };\r\n    } catch (error) {\r\n      return { success: false, error: 'Login failed' };\r\n    }\r\n  };\r\n\r\n  const signup = async (userData) => {\r\n    try {\r\n      const newUser = {\r\n        id: Date.now(),\r\n        email: userData.email,\r\n        name: userData.fullName || 'User Name',\r\n        joinedAt: new Date().toISOString(),\r\n      };\r\n\r\n      console.log({newUser});\r\n      \r\n\r\n      localStorage.setItem('authToken', 'mock-jwt-token');\r\n      localStorage.setItem('userData', JSON.stringify(newUser));\r\n\r\n      setIsAuthenticated(true);\r\n      setUser(newUser);\r\n\r\n      return { success: true };\r\n    } catch (error) {\r\n      return { success: false, error: 'Signup failed' };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('authToken');\r\n    localStorage.removeItem('userData');\r\n    setIsAuthenticated(false);\r\n    setUser(null);\r\n  };\r\n\r\n  // --- Extended Methods ---\r\n  const verifyEmail = async (code) => {\r\n    try {\r\n      // Simulate API call to verify email with OTP/code\r\n      console.log('Verifying email with code:', code);\r\n      return { success: true };\r\n    } catch (error) {\r\n      return { success: false, error: 'Email verification failed' };\r\n    }\r\n  };\r\n\r\n  const createPassword = async (password) => {\r\n    try {\r\n      console.log('Creating password:', password);\r\n      return { success: true };\r\n    } catch (error) {\r\n      return { success: false, error: 'Password creation failed' };\r\n    }\r\n  };\r\n\r\n  const forgotPassword = async (email) => {\r\n    try {\r\n      console.log('Sending password reset link to:', email);\r\n      return { success: true };\r\n    } catch (error) {\r\n      return { success: false, error: 'Forgot password request failed' };\r\n    }\r\n  };\r\n\r\n  const resetPassword = async (token, newPassword) => {\r\n    try {\r\n      console.log('Resetting password with token:', token, 'newPassword:', newPassword);\r\n      return { success: true };\r\n    } catch (error) {\r\n      return { success: false, error: 'Password reset failed' };\r\n    }\r\n  };\r\n\r\n  const createPin = async (pin) => {\r\n    try {\r\n      console.log('Creating user PIN:', pin);\r\n      return { success: true };\r\n    } catch (error) {\r\n      return { success: false, error: 'PIN creation failed' };\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    isAuthenticated,\r\n    user,\r\n    login,\r\n    signup,\r\n    logout,\r\n    verifyEmail,\r\n    createPassword,\r\n    forgotPassword,\r\n    resetPassword,\r\n    createPin,\r\n    loading,\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}