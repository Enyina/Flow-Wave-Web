{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\flow wave\\\\src\\\\contexts\\\\DarkModeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DarkModeContext = /*#__PURE__*/createContext();\nexport const useDarkMode = () => {\n  _s();\n  const context = useContext(DarkModeContext);\n  if (!context) {\n    throw new Error('useDarkMode must be used within a DarkModeProvider');\n  }\n  return context;\n};\n_s(useDarkMode, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const DarkModeProvider = ({\n  children\n}) => {\n  _s2();\n  const [isDarkMode, setIsDarkMode] = useState(() => {\n    // Check localStorage first, then system preference\n    const saved = localStorage.getItem('darkMode');\n    if (saved !== null) {\n      return JSON.parse(saved);\n    }\n    return window.matchMedia('(prefers-color-scheme: dark)').matches;\n  });\n  useEffect(() => {\n    // Save to localStorage\n    localStorage.setItem('darkMode', JSON.stringify(isDarkMode));\n\n    // Apply to document\n    if (isDarkMode) {\n      document.documentElement.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n    }\n  }, [isDarkMode]);\n  const toggleDarkMode = () => {\n    setIsDarkMode(prev => !prev);\n  };\n  return /*#__PURE__*/_jsxDEV(DarkModeContext.Provider, {\n    value: {\n      isDarkMode,\n      toggleDarkMode\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s2(DarkModeProvider, \"zVyFWy80TdV4WKuimmcIK5T6Qy0=\");\n_c = DarkModeProvider;\nvar _c;\n$RefreshReg$(_c, \"DarkModeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","DarkModeContext","useDarkMode","_s","context","Error","DarkModeProvider","children","_s2","isDarkMode","setIsDarkMode","saved","localStorage","getItem","JSON","parse","window","matchMedia","matches","setItem","stringify","document","documentElement","classList","add","remove","toggleDarkMode","prev","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/Documents/flow wave/src/contexts/DarkModeContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst DarkModeContext = createContext();\r\n\r\nexport const useDarkMode = () => {\r\n  const context = useContext(DarkModeContext);\r\n  if (!context) {\r\n    throw new Error('useDarkMode must be used within a DarkModeProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const DarkModeProvider = ({ children }) => {\r\n  const [isDarkMode, setIsDarkMode] = useState(() => {\r\n    // Check localStorage first, then system preference\r\n    const saved = localStorage.getItem('darkMode');\r\n    if (saved !== null) {\r\n      return JSON.parse(saved);\r\n    }\r\n    return window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Save to localStorage\r\n    localStorage.setItem('darkMode', JSON.stringify(isDarkMode));\r\n    \r\n    // Apply to document\r\n    if (isDarkMode) {\r\n      document.documentElement.classList.add('dark');\r\n    } else {\r\n      document.documentElement.classList.remove('dark');\r\n    }\r\n  }, [isDarkMode]);\r\n\r\n  const toggleDarkMode = () => {\r\n    setIsDarkMode(prev => !prev);\r\n  };\r\n\r\n  return (\r\n    <DarkModeContext.Provider value={{ isDarkMode, toggleDarkMode }}>\r\n      {children}\r\n    </DarkModeContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,eAAe,gBAAGN,aAAa,CAAC,CAAC;AAEvC,OAAO,MAAMO,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAMC,OAAO,GAAGR,UAAU,CAACK,eAAe,CAAC;EAC3C,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,oDAAoD,CAAC;EACvE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,WAAW;AAQxB,OAAO,MAAMI,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAChD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,MAAM;IACjD;IACA,MAAMc,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAC9C,IAAIF,KAAK,KAAK,IAAI,EAAE;MAClB,OAAOG,IAAI,CAACC,KAAK,CAACJ,KAAK,CAAC;IAC1B;IACA,OAAOK,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO;EAClE,CAAC,CAAC;EAEFpB,SAAS,CAAC,MAAM;IACd;IACAc,YAAY,CAACO,OAAO,CAAC,UAAU,EAAEL,IAAI,CAACM,SAAS,CAACX,UAAU,CAAC,CAAC;;IAE5D;IACA,IAAIA,UAAU,EAAE;MACdY,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;IAChD,CAAC,MAAM;MACLH,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC;IACnD;EACF,CAAC,EAAE,CAAChB,UAAU,CAAC,CAAC;EAEhB,MAAMiB,cAAc,GAAGA,CAAA,KAAM;IAC3BhB,aAAa,CAACiB,IAAI,IAAI,CAACA,IAAI,CAAC;EAC9B,CAAC;EAED,oBACE3B,OAAA,CAACC,eAAe,CAAC2B,QAAQ;IAACC,KAAK,EAAE;MAAEpB,UAAU;MAAEiB;IAAe,CAAE;IAAAnB,QAAA,EAC7DA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;AAACzB,GAAA,CA/BWF,gBAAgB;AAAA4B,EAAA,GAAhB5B,gBAAgB;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}